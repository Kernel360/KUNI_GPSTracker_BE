import http from "k6/http";
import { check } from "k6";

export const options = {
  scenarios: {
    main_load: {
      executor: "constant-arrival-rate",
      rate: 3000,
      timeUnit: "1m",
      duration: "3m",
      preAllocatedVUs: 200,
      maxVUs: 500,
    },
  },
};

// Setup 함수: 테스트 시작 전에 한번만 실행됩니다.
export function setup() {
  // 테스트 차량 등록
  // const addVehicleUrl = "http://main-alb-475201330.ap-northeast-2.elb.amazonaws.com/api/vehicle";
  // const addVehiclePayload = JSON.stringify({
  //   vehicleNumber: "12가3456",
  //   vehicleName: "MERCEDES",
  // });
  // const addVehicleParams = {
  //   headers: {
  //     "Content-Type": "application/json",
  //   },
  // };
  // const addVehicleRes = http.post(
  //   addVehicleUrl,
  //   addVehiclePayload,
  //   addVehicleParams
  // );
  // 1. 토큰 발급 요청
  const tokenUrl =
    "http://main-alb-475201330.ap-northeast-2.elb.amazonaws.com/api/emulator/token";
  const tokenPayload = JSON.stringify({
    mdn: "12가3456",
    tid: "test_tid",
    mid: "test_mid",
    pv: "1.0",
    did: "test_did",
    dfwver: "1.0.0",
  });
  const tokenParams = {
    headers: {
      "Content-Type": "application/json",
    },
  };
  const tokenRes = http.post(tokenUrl, tokenPayload, tokenParams);
  const token = tokenRes.json("token");
  console.log(`Token received: ${token}`);

  // 2. /api/emulator/on 요청 (토큰 사용)
  // const onUrl = `http://main-alb-475201330.ap-northeast-2.elb.amazonaws.com/api/emulator/on`;
  // const onPayload = JSON.stringify({
  //   mdn: "12가3456",
  //   tid: "string",
  //   mid: "string",
  //   pv: "string",
  //   did: "string",
  //   onTime: "2025-07-31T07:49:55.941Z",
  //   offTime: "2025-07-31T07:49:55.941Z",
  //   gcd: "string",
  //   lat: "string",
  //   lon: "string",
  //   ang: "string",
  //   spd: "string",
  //   sum: "string",
  // });
  // const onHeaders = {
  //   headers: {
  //     "Content-Type": "application/json",
  //     Authorization: `Bearer ${token}`,
  //   },
  // };
  // const onRes = http.post(onUrl, onPayload, onHeaders);
  // check(onRes, { "ON request status is 200": (r) => r.status === 200 });

  // 3. 부하 테스트에 사용할 토큰 반환
  return { authToken: token };
}

// 기본 함수: 각 가상 사용자(VU)가 실행하는 코드입니다.
export default function (data) {
  const url = `http://main-alb-475201330.ap-northeast-2.elb.amazonaws.com/api/emulator/gps`;
  const params = {
    headers: {
      "Content-Type": "application/json",
      Authorization: `Bearer ${data.authToken}`,
    },
  };
  const payload = JSON.stringify({
    mdn: "12가3456",
    tid: "string",
    mid: "string",
    pv: "string",
    did: "string",
    oTime: "2025-07-31T07:49:55.941Z",
    cCnt: "string",
    cList: [
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
      {
        sec: 60,
        gcd: "string",
        lat: 35.123456,
        lon: 123.45678,
        ang: "string",
        spd: "string",
        sum: "string",
        bat: "string",
      },
    ],
  });

  // GET 요청은 body를 가질 수 없으므로 POST로 변경합니다.
  const res = http.post(url, payload, params);

  check(res, {
    "GPS request status is 200": (r) => r.status === 200,
  });
}
