<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <!-- 패턴 -->
    <property name="CONSOLE_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"/>
    <property name="LOG_DIR" value="${LOG_DIR:-logs}"/>
    <property name="FILE_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger{36} - %msg%n"/>

    <!-- 콘솔: 사람이 보는 표준 출력 -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder><pattern>${CONSOLE_PATTERN}</pattern></encoder>
    </appender>

    <!-- WARN/ERROR 파일: 일자별 롤링 -->
    <appender name="WARN_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_DIR}/warn-error.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_DIR}/warn-error.%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>WARN</level> <!-- WARN 이상만 파일 -->
        </filter>
        <encoder><pattern>${FILE_PATTERN}</pattern></encoder>
    </appender>

    <!-- AOP/서비스 등 애플리케이션 로그: 콘솔로 INFO 이상 출력 (전파 허용) -->
<!--    일단은 root하나로 통합해서 사용하고 필요하면 level을 Debug로 해서 다른거 사용-->
<!--    <logger name="com.example.BackendServer" level="INFO" additivity="true">-->
<!--        <appender-ref ref="CONSOLE"/>-->
<!--    </logger>-->

    <!-- 시끄러운 패키지 톤 조절 -->
    <logger name="org.hibernate.SQL" level="WARN"/>
    <logger name="org.springframework.security" level="INFO"/>

    <!-- ✅ 핵심: ROOT에 콘솔 + 파일 연결(최소 INFO 권장) -->
    <root level="INFO">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="WARN_FILE"/>
    </root>
</configuration>